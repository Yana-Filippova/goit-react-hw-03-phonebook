{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","form","label","input","type","pattern","title","required","placeholder","onChange","button","Component","ContactList","contacts","onDeleteContact","map","id","item","onClick","Filter","filter","Container","children","container","App","addContact","shortid","generate","find","contact","alert","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","visibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f3932ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1qUPb\",\"filter\":\"Filter_filter__2qsx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1l7PN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3D4Gx\",\"label\":\"ContactForm_label__cL-BE\",\"input\":\"ContactForm_input__1WHf-\",\"button\":\"ContactForm_button__Tlf86\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            placeholder=\"Adrian Smith\"\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            placeholder=\"000-00-00\"\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li key={id} className={styles.item}>\n          {name}: {number}\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <label className={styles.filter}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const item = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    if (name === '' || number === '') {\n      alert('Please enter all fields!');\n      return;\n    }\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    } else if (contacts.find(contact => contact.number === number)) {\n      alert(`${number} is already in contacts`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [item, ...contacts],\n      }));\n    }\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter, contacts} = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n      \n        <h2>Contacts</h2>\n        {contacts.length > 1 && (\n        <Filter value={filter} onChange={this.changeFilter} />\n        )}\n\n        {contacts.length > 0 ? (\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n        ) : (\n        <p>Currently your phonebook has no contacts. Please add them.</p>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__2BrbW\",\"button\":\"ContactList_button__3Qsbv\"};"],"sourceRoot":""}